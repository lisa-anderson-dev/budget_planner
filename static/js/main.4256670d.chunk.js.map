{"version":3,"sources":["components/Dashboard.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","displayBudget","id","budgetTotal","className","onClick","switchBudgetMode","editBudget","htmlFor","type","name","min","value","newBudget","onChange","handleChange","saveNewBudget","cancelNewBudget","budgetMode","budgetRemaining","Math","abs","budgetSpent","ExpenseItem","cost","deleteExpense","ExpenseList","expenseList","searchMode","filter","e","toLowerCase","includes","inputSearch","map","replace","placeholder","searchExpense","AddExpense","inputExpenseName","inputExpenseCost","addExpense","App","event","setState","target","Number","state","alert","mode","window","confirm","parentElement","previousElementSibling","innerHTML","slice","list","idx","findIndex","splice","newExpense","push","this","reduce","sum","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4256670d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Dashboard(props) {\r\n    const displayBudget = \r\n        <div id=\"budgetTotal\">\r\n            Budget:&ensp;${props.budgetTotal}\r\n            <button className=\"formBtn\" onClick={props.switchBudgetMode}>Edit</button>\r\n        </div>;\r\n    const editBudget = \r\n        <div id=\"budgetTotal\">\r\n            <label htmlFor=\"newBudget\">Budget:</label>\r\n            <input type=\"number\" name=\"newBudget\" id=\"newBudget\" min=\"1\" value={props.newBudget} onChange={props.handleChange} />\r\n            <button className=\"iconBtn\" onClick={props.saveNewBudget}><i className=\"fas fa-check-circle\"></i></button>\r\n            <button className=\"iconBtn\" onClick={props.cancelNewBudget}><i className='fas fa-times-circle'></i></button>\r\n        </div>;\r\n    return (\r\n        <div className=\"Dashboard\">\r\n            {props.budgetMode ? editBudget : displayBudget}\r\n            {props.budgetRemaining > 0 ? <div id=\"budgetRemaining\">Remaining:&ensp;${props.budgetRemaining}</div> : <div id=\"budgetRemaining\">Remaining:&ensp;$<span className=\"negative\">({Math.abs(props.budgetRemaining)})</span></div>}\r\n            <div id=\"budgetSpent\">Spent so far:&ensp;${props.budgetSpent}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n        <div className=\"ExpenseItem\">\r\n            <div>{props.name}</div>\r\n            <div>\r\n                <div className=\"expenseCost\">${props.cost}</div>\r\n                <button className=\"iconBtn\" onClick={props.deleteExpense}><i className='fas fa-times-circle'></i></button></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nfunction ExpenseList(props) {\r\n    const list = props.searchMode ? props.expenseList.filter((e) => e.name.toLowerCase().includes(props.inputSearch.toLowerCase())) : props.expenseList;\r\n    const expenseList = list.map((e) => \r\n      <li key={e.name.toLowerCase().replace(/\\s/g, '-')}>\r\n        <ExpenseItem name={e.name} cost={e.cost} deleteExpense={props.deleteExpense} />\r\n      </li>);\r\n    return (\r\n        <div className=\"ExpenseList\">\r\n            <h2>Expenses</h2>\r\n            <input type=\"text\" name=\"inputSearch\" id=\"inputSearch\" placeholder=\"Type to search...\" value={props.inputSearch} onChange={props.searchExpense} />\r\n            <ul>{expenseList}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\r\n\r\nfunction AddExpense(props) {\r\n    return (\r\n        <div className=\"AddExpense\">\r\n            <h2>Add Expense</h2>\r\n            <ul>\r\n              <li>\r\n                  <label htmlFor=\"inputExpenseName\">Name</label>\r\n                  <input type=\"text\" name=\"inputExpenseName\" id=\"inputExpenseName\" value={props.inputExpenseName} onChange={props.handleChange} />\r\n              </li>\r\n              <li>\r\n                  <label htmlFor=\"inputExpenseCost\">Cost</label>\r\n                  <input type=\"number\" name=\"inputExpenseCost\" id=\"inputExpenseCost\" min=\"1\" value={props.inputExpenseCost} onChange={props.handleChange} />\r\n              </li>\r\n            </ul>\r\n            <button className=\"formBtn\" onClick={props.addExpense}>Save</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddExpense;","import React from 'react';\nimport './App.css';\n\nimport Dashboard from './components/Dashboard';\nimport ExpenseList from './components/ExpenseList';\nimport AddExpense from './components/AddExpense';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      budgetMode: false,\n      newBudget: 2000,\n      budgetTotal: 2000,\n      inputExpenseName: \"\",\n      inputExpenseCost: \"\",\n      inputSearch: \"\",\n      searchMode: false,\n      expenseList: [\n        {\n          name: \"Shopping\",\n          cost: 50\n        },\n        {\n          name: \"Vacation\",\n          cost: 300\n        },\n        {\n          name: \"Transportation\",\n          cost: 70\n        },\n        {\n          name: \"Gas\",\n          cost: 400\n        },\n        {\n          name: \"Child Care\",\n          cost: 500\n        }\n      ]\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  switchBudgetMode = () => {\n    this.setState({\n      budgetMode: true,\n    })\n  }\n\n  saveNewBudget = () => {\n    if (Number(this.state.newBudget) < 1) {\n      alert(\"Budget must be at least $1\")\n    }\n    else {\n      this.setState({\n        budgetTotal: Number(this.state.newBudget),\n        budgetMode: false\n      })\n    }\n  }\n\n  cancelNewBudget = () => {\n    this.setState({\n      newBudget: this.state.budgetTotal,\n      budgetMode: false\n    })\n  }\n\n  searchExpense = (event) => {\n    const mode = event.target.value ? true : false;\n    this.setState({\n      inputSearch: event.target.value,\n      searchMode: mode\n    });\n  }\n\n  deleteExpense = (e) => {\n    const deleteConfirm = window.confirm(\"Are you sure you want to delete this expense?\");\n    if (deleteConfirm) {\n      const name = e.target.parentElement.parentElement.previousElementSibling.innerHTML;\n      const cost = Number(e.target.parentElement.previousElementSibling.innerHTML.slice(1));\n      const list = [...this.state.expenseList];\n      const idx = list.findIndex((e) => e.name === name && e.cost === cost);\n      list.splice(idx, 1);\n      this.setState({\n        expenseList: list\n      });\n    }\n  }\n\n  addExpense = () => {\n    if (!this.state.inputExpenseName || this.state.inputExpenseCost === \"\")\n      alert(\"Cannot add expense without a name and cost\");\n    else if (Number(this.state.inputExpenseCost) < 1)\n      alert(\"Cost must be at least $1\")\n    else {\n      const newExpense = {\n        name: this.state.inputExpenseName,\n        cost: Number(this.state.inputExpenseCost)\n      };\n      const list = this.state.expenseList;\n      list.push(newExpense);\n      this.setState({\n        expenseList: list,\n        inputExpenseName: \"\",\n        inputExpenseCost: \"\"\n      });\n    }\n  }\n\n  render() {\n    const budgetSpent = this.state.expenseList.reduce((sum, e) => sum += e.cost, 0);\n    const budgetRemaining = this.state.budgetTotal - budgetSpent;\n    return (\n      <div className=\"App\">\n\n        <h1>My Budget Planner</h1>\n\n        <Dashboard budgetMode={this.state.budgetMode} newBudget={this.state.newBudget} budgetTotal={this.state.budgetTotal} budgetRemaining={budgetRemaining} budgetSpent={budgetSpent} handleChange={this.handleChange} switchBudgetMode={this.switchBudgetMode} cancelNewBudget={this.cancelNewBudget} saveNewBudget={this.saveNewBudget} />\n\n        <ExpenseList searchMode={this.state.searchMode} inputSearch={this.state.inputSearch} expenseList={this.state.expenseList} searchExpense={this.searchExpense} deleteExpense={this.deleteExpense} />\n\n        <AddExpense inputExpenseName={this.state.inputExpenseName} inputExpenseCost={this.state.inputExpenseCost} handleChange={this.handleChange} addExpense={this.addExpense} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}