{"version":3,"sources":["components/ExpenseItem.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseItem","props","className","name","cost","App","searchExpense","handleChange","event","setState","target","value","addExpense","newExpense","state","inputExpenseName","Number","inputExpenseCost","expenseList","push","mode","budgetTotal","inputSearch","budgetSpent","this","reduce","sum","e","budgetRemaining","map","toLowerCase","replace","id","type","placeholder","onChange","htmlFor","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAaeA,MAXf,SAAqBC,GACjB,OACI,sBAAKC,UAAU,cAAf,UACI,8BAAMD,EAAME,OACZ,gCACI,sBAAKD,UAAU,cAAf,cAA+BD,EAAMG,QACrC,wBAAQF,UAAU,YAAlB,SAA8B,mBAAGA,UAAU,iCC4F5CG,E,kDA/Fb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAgCRK,cAAgB,aAjCG,EAqCnBC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOP,KAAOK,EAAME,OAAOC,SAvCnB,EA2CnBC,WAAa,WACX,IAAMC,EAAa,CACjBV,KAAM,EAAKW,MAAMC,iBACjBX,KAAMY,OAAO,EAAKF,MAAMG,mBAE1B,EAAKH,MAAMI,YAAYC,KAAKN,GAC5B,EAAKJ,SAAS,CACZS,YAAa,EAAKJ,MAAMI,YACxBH,iBAAkB,GAClBE,iBAAkB,MAlDpB,EAAKH,MAAQ,CACXM,KAAM,MACNC,YAAa,IACbN,iBAAkB,GAClBE,iBAAkB,GAClBK,YAAa,GACbJ,YAAa,CACX,CACEf,KAAM,WACNC,KAAM,IAER,CACED,KAAM,WACNC,KAAM,KAER,CACED,KAAM,iBACNC,KAAM,IAER,CACED,KAAM,MACNC,KAAM,KAER,CACED,KAAM,aACNC,KAAM,OA3BK,E,0CAwDnB,WACE,IAAMmB,EAAcC,KAAKV,MAAMI,YAAYO,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAOC,EAAEvB,OAAM,GACvEwB,EAAkBJ,KAAKV,MAAMO,YAAcE,EAC3CL,EAAcM,KAAKV,MAAMI,YAAYW,KAAI,SAACF,GAAD,OAAO,6BAAmD,cAAC,EAAD,CAAaxB,KAAMwB,EAAExB,KAAMC,KAAMuB,EAAEvB,QAA7EuB,EAAExB,KAAK2B,cAAcC,QAAQ,MAAO,SACnG,OACE,sBAAK7B,UAAU,MAAf,UACE,mDACA,sBAAKA,UAAU,YAAf,UACI,sBAAK8B,GAAG,cAAR,sBAAgCR,KAAKV,MAAMO,YACvC,6CAEJ,sBAAKW,GAAG,kBAAR,yBAAuCJ,KACvC,sBAAKI,GAAG,cAAR,4BAAsCT,QAE1C,sBAAKrB,UAAU,cAAf,UACE,0CACA,uBAAO+B,KAAK,OAAO9B,KAAK,cAAc6B,GAAG,cAAcE,YAAY,oBAAoBvB,MAAOa,KAAKV,MAAMQ,YAAaa,SAAUX,KAAKlB,gBACrI,6BAAKY,OAEP,sBAAKhB,UAAU,aAAf,UACI,6CACA,+BACE,+BACI,uBAAOkC,QAAQ,mBAAf,kBACA,uBAAOH,KAAK,OAAO9B,KAAK,mBAAmB6B,GAAG,mBAAmBrB,MAAOa,KAAKV,MAAMC,iBAAkBoB,SAAUX,KAAKjB,kBAExH,+BACI,uBAAO6B,QAAQ,mBAAf,kBACA,uBAAOH,KAAK,SAAS9B,KAAK,mBAAmB6B,GAAG,mBAAmBrB,MAAOa,KAAKV,MAAMG,iBAAkBkB,SAAUX,KAAKjB,qBAG5H,wBAAQ8B,QAASb,KAAKZ,WAAtB,4B,GAxFM0B,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.292a2ef2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n        <div className=\"ExpenseItem\">\r\n            <div>{props.name}</div>\r\n            <div>\r\n                <div className=\"expenseCost\">${props.cost}</div>\r\n                <button className=\"deleteBtn\"><i className='fas fa-times-circle'></i></button></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\nimport './App.css';\nimport ExpenseItem from './components/ExpenseItem';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"add\",\n      budgetTotal: 2000,\n      inputExpenseName: \"\",\n      inputExpenseCost: \"\",\n      inputSearch: \"\",\n      expenseList: [\n        {\n          name: \"Shopping\",\n          cost: 50\n        },\n        {\n          name: \"Vacation\",\n          cost: 300\n        },\n        {\n          name: \"Transportation\",\n          cost: 70\n        },\n        {\n          name: \"Gas\",\n          cost: 400\n        },\n        {\n          name: \"Child Care\",\n          cost: 500\n        }\n      ]\n    };\n  }\n\n  searchExpense = () => {\n    return;\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addExpense = () => {\n    const newExpense = {\n      name: this.state.inputExpenseName,\n      cost: Number(this.state.inputExpenseCost)\n    };\n    this.state.expenseList.push(newExpense);\n    this.setState({\n      expenseList: this.state.expenseList,\n      inputExpenseName: \"\",\n      inputExpenseCost: \"\"\n    });\n  }\n\n  render() {\n    const budgetSpent = this.state.expenseList.reduce((sum, e) => sum += e.cost, 0);\n    const budgetRemaining = this.state.budgetTotal - budgetSpent;\n    const expenseList = this.state.expenseList.map((e) => <li key={e.name.toLowerCase().replace(/\\s/g, '-')}><ExpenseItem name={e.name} cost={e.cost} /></li>);\n    return (\n      <div className=\"App\">\n        <h1>My Budget Planner</h1>\n        <div className=\"Dashboard\">\n            <div id=\"budgetTotal\">Budget: ${this.state.budgetTotal}\n                <button>Edit</button>\n            </div>\n            <div id=\"budgetRemaining\">Remaining: ${budgetRemaining}</div>\n            <div id=\"budgetSpent\">Spent so far: ${budgetSpent}</div>\n        </div>\n        <div className=\"ExpenseList\">\n          <h2>Expenses</h2>\n          <input type=\"text\" name=\"inputSearch\" id=\"inputSearch\" placeholder=\"Type to search...\" value={this.state.inputSearch} onChange={this.searchExpense} />\n          <ul>{expenseList}</ul>\n        </div>\n        <div className=\"AddExpense\">\n            <h2>Add Expense</h2>\n            <ul>\n              <li>\n                  <label htmlFor=\"inputExpenseName\">Name</label>\n                  <input type=\"text\" name=\"inputExpenseName\" id=\"inputExpenseName\" value={this.state.inputExpenseName} onChange={this.handleChange} />\n              </li>\n              <li>\n                  <label htmlFor=\"inputExpenseCost\">Cost</label>\n                  <input type=\"number\" name=\"inputExpenseCost\" id=\"inputExpenseCost\" value={this.state.inputExpenseCost} onChange={this.handleChange} />\n              </li>\n            </ul>\n            <button onClick={this.addExpense}>Save</button>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}